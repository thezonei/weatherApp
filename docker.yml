- hosts: ec2-instance
  become: true
  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python-setuptools
        update_cache: true

    - name: Install web app dependencies
      pip:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - Flask
          - requests

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce and docker-compose
      apt:
        pkg:
          - docker-ce
          - docker-compose
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Create project directory structure
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /myfile1
        - /myfile1/static
        - /myfile1/templates

    - name: Copy local files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - { src: "main.py", dest: "/myfile1/" }
        - { src: "static/style.css", dest: "/myfile1/static/" }
        - { src: "templates/index.html", dest: "/myfile1/templates/" }
        - { src: "templates/result.html", dest: "/myfile1/templates/" }

    # - name: Creating container using HTTPD Image
    #   docker_container:
    #     name: "Mywebserver4"
    #     image: "httpd"
    #     state: started
    #     exposed_ports:
    #       - "80"
    #     ports:
    #       - "80:80"
    #     volumes:
    #       - "/myfile1:/usr/local/apache2/htdocs/"
    - name: Build and tag the Docker image
      docker_image:
        path: "/path/to/docker/context"
        name: "myusername/my_flask_app"
        tag: "v1.0"
        source: build
        state: present



    - name: Run Flask app container
      docker_container:
        name: "flask_app"
        image: "my_flask_app"
        state: started
        restart_policy: always
        exposed_ports:
          - "80"
        ports:
          - "80:80"
        volumes:
          - "/myfile1:/app"
